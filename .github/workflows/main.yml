name: cicd-demo
on:
  push:
    branches:
      - 'migrate_to_oracle_cloud'
      - 'master'
jobs:
  build-job:
    name: Build Job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

#      - name: Run a multi-line script
#        run: |
#          mkdir ../build
#          cp -TR . ../build
#          tar -cvf deploy.tar ../build/

      - name: 'Copy binary to OCI'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VM_SSH_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          source: "."
          target: "build"

      - name: 'Deploy'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_SSH_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          script: |
            cd build
            sudo docker build -t scala-bot-image:latest .
            sudo docker stop scala-bot
            sudo docker rm scala-bot
            sudo docker run -d \
            -e MONGODB_URI='${{ secrets.MONGODB_URI }}' \
            -e MONGODB_DATABASE_NAME='${{ secrets.MONGODB_DATABASE_NAME }}' \
            -e LOG_CHANNEL='${{ secrets.LOG_CHANNEL }}' \
            -e GOOGLEAPIS_CREDENTIALS='${{ secrets.GOOGLEAPIS_CREDENTIALS }}' \
            -e FILES_CHANNEL_ID='${{ secrets.FILES_CHANNEL_ID }}' \
            -e BOT_TOKEN='${{ secrets.BOT_TOKEN }}' \
            -e FILES_CHANNEL_ID='${{ secrets.FILES_CHANNEL_ID }}' \
            -e HOST='{{ secrets.HOST }}' \
            --publish 8080:8080 scala-bot-image:latest --name scala-bot
