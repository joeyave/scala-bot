name: cicd-demo
on:
  push:
    branches:
      - 'develop'
      - 'master'
jobs:
  build-job:
    name: Build Job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 'Clean remote build directory'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_SSH_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          script: |
            rm -rf build

      - name: 'Copy source files to server'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VM_SSH_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          source: "."
          target: "build" # todo: change target folder to project specific.

      - name: 'Build image and push to Dockerhub'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_SSH_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          script: |
            cd build &&
            sudo docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/scala-bot-image . &&
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin &&
            sudo docker push ${{ secrets.DOCKERHUB_USERNAME }}/scala-bot-image

      - name: 'Update service'
        uses: appleboy/ssh-action@master
        env:
          ENV: ${{ secrets.ENV }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          BOT_MONGODB_URI: ${{ secrets.BOT_MONGODB_URI }}
          BOT_MONGODB_NAME: ${{ secrets.BOT_MONGODB_NAME }}
          BOT_GOOGLEAPIS_KEY: ${{ secrets.BOT_GOOGLEAPIS_KEY }}
          BOT_DOMAIN: ${{ secrets.BOT_DOMAIN }}
          BOT_ALERTS_CHANNEL_ID: ${{ secrets.BOT_ALERTS_CHANNEL_ID }}
        with:
          host: ${{ secrets.VM_SSH_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          envs: ENV, DOCKERHUB_USERNAME, BOT_TOKEN, BOT_MONGODB_URI, BOT_MONGODB_NAME, BOT_GOOGLEAPIS_KEY, BOT_DOMAIN, BOT_ALERTS_CHANNEL_ID
          script: |
            cd build
            sudo -E docker stack deploy -c docker-stack.yml scala-bot
            sudo docker system prune -f