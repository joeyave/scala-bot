name: cicd-demo
on:
  push:
    branches:
      - 'migrate_to_oracle_cloud'
      - 'master'
jobs:
  build-job:
    name: Build Job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - name: Install dependencies
        run: go get .
      - name: Build
        run: go build -v ./...

#      - name: 'Publish JAR'
#        uses: actions/upload-artifact@v2-preview
#        with:
#          name: 'cicd-demo-${{env.VERSION}}-all.jar'
#          path: build/libs/*-all.jar

      - name: 'Write Config & Key Files'
        run: |
          mkdir ~/.oci
          echo "[DEFAULT]" >> ~/.oci/config
          echo "user=${{secrets.OCI_USER_OCID}}" >> ~/.oci/config
          echo "fingerprint=${{secrets.OCI_FINGERPRINT}}" >> ~/.oci/config
          echo "pass_phrase=${{secrets.OCI_PASSPHRASE}}" >> ~/.oci/config
          echo "region=${{secrets.OCI_REGION}}" >> ~/.oci/config
          echo "tenancy=${{secrets.OCI_TENANCY_OCID}}" >> ~/.oci/config
          echo "key_file=~/.oci/key.pem" >> ~/.oci/config
          echo "${{secrets.OCI_KEY_FILE}}" >> ~/.oci/key.pem
          echo "${{secrets.VM_SSH_PUB_KEY}}" >> /home/runner/.oci/id_vm.pub

      - name: 'Install OCI CLI'
        run: |
          echo "/home/runner/bin" >> $GITHUB_PATH
          exec -l $SHELL

      - name: 'Fix Config File Permissions'
        run: |
          oci setup repair-file-permissions --file /home/runner/.oci/config
          oci setup repair-file-permissions --file /home/runner/.oci/key.pem

      - name: 'Check Existing Instance'
        run: |
          echo "INSTANCE_OCID=$( \
            oci compute instance list \
            --lifecycle-state RUNNING \
            --compartment-id ${{secrets.VM_COMPARTMENT_OCID}} \
            --display-name scala-bot \
            --query "data [0].id" \
            --raw-output \
          )" >> $GITHUB_ENV

      - name: 'Create Instance'
        if: ${{!env.INSTANCE_OCID}}
        run: |
          echo "INSTANCE_OCID=$( \
            oci compute instance launch \
              -c ${{secrets.VM_COMPARTMENT_OCID}} \
              --availability-domain ${{secrets.VM_AVAILABILITY_DOMAIN}} \
              --shape ${{secrets.VM_SHAPE}} \
              --shape-config '{"memoryInGBs": 4, "ocpus": 1}' \
              --assign-public-ip true \
              --display-name cicd-demo \
              --image-id ${{secrets.VM_CUSTOM_IMAGE_OCID}} \
              --ssh-authorized-keys-file /home/runner/.oci/id_vm.pub \
              --subnet-id ${{secrets.VM_SUBNET_OCID}} \
              --wait-for-state RUNNING \
              --query "data.id" \
              --raw-output \
          )" >> $GITHUB_ENV

      - name: 'Get Instance IP'
        run: |
          echo "INSTANCE_IP=$( \
            oci compute instance list-vnics \
            --instance-id ${{env.INSTANCE_OCID}} \
            --query 'data [0]."public-ip"' \
            --raw-output \
          )" >> $GITHUB_ENV
          echo Instance IP: ${{ env.INSTANCE_IP }}

      - name: 'Wait for SSH'
        run: |
          while ! nc -w5 -z ${{ env.INSTANCE_IP }} 22; do
                  sleep 5
                  echo "SSH not available..."
          done; echo "SSH ready!"

#      - name: 'Stop App'
#        uses: appleboy/ssh-action@v0.1.4
#        with:
#          host: ${{env.INSTANCE_IP}}
#          username: opc
#          key: ${{secrets.VM_SSH_PRIVATE_KEY}}
#          script: |
#            pid=`ps aux | grep "[c]icd-demo.jar" | awk '{print $2}'`
#            if [ "$pid" == "" ]; then
#              echo "Process not found"
#            else
#              kill -9 $pid
#            fi
#            sudo mkdir -p /app
#
#      - name: 'Push JAR'
#        uses: appleboy/scp-action@v0.1.4
#        with:
#          host: ${{ env.INSTANCE_IP }}
#          username: opc
#          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
#          source: "build/libs/cicd-demo-${{env.VERSION}}-all.jar"
#          target: "app"
#          strip_components: 2
#
#      - name: 'Start App'
#        uses: appleboy/ssh-action@v0.1.4
#        with:
#          host: ${{ env.INSTANCE_IP }}
#          username: opc
#          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
#          script: |
#            sudo mv ~/app/cicd-demo-${{env.VERSION}}-all.jar /app/cicd-demo.jar
#            nohup java -jar /app/cicd-demo.jar > output.$(date --iso).log 2>&1 &
